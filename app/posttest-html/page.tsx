"use client";
import { useState } from "react";

type Question = {
  question: string;
  choices: string[];
};

export default function QuizPage() {
  const [answers, setAnswers] = useState<{ [key: number]: string }>({});

  const handleChange = (questionIndex: number, value: string) => {
    setAnswers((prev) => ({ ...prev, [questionIndex]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log("‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á:", answers);
    // TODO: ‡∏™‡πà‡∏á‡πÑ‡∏õ backend ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
  };

  // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
  const questions: Question[] = [
    {
      question: "1) HTML ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?",
      choices: ["‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå", "‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", "‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¢", "‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠"],

    },
    {
      question: "2) ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á HTML ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡∏ö‡πâ‡∏≤‡∏á?",
      choices: ["<html>, <head>, <body>", "<header>, <main>, <footer>", "<div>, <span>, <p>", "<title>, <meta>, <link>"],
    },
    {
      question: "3) Meta Tags ‡πÉ‡∏ô HTML ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏∞‡πÑ‡∏£?",
      choices: ["‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå", "‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ä‡πÄ‡∏≠‡∏ô‡∏à‡∏¥‡∏ô", "‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á", "‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"],
    },
    {
      question: "4) ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Comment ‡πÉ‡∏ô HTML ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡πÉ‡∏î??",
      choices: ["<!-- ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Comment -->", "// ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Comment", "/* ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Comment */", "# ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Comment"],
    },
    {
      question: "5) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á Heading ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î?",
      choices: ["<h1>", "<h2>", "<h3>", "<h4>"],
    },
    {
      question: "6) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡πÉ‡∏ô HTML?",
      choices: ["<br>", "<hr>", "<line>", "<div>"],
    },
    {
      question: "7) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö?",
      choices: ["<a>", "<link>", "<href>", "<url>"],
    },
    {
      question: "8) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏£‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô HTML?",
      choices: ["<img>", "<picture>", "<image>", "<photo>"],
    },
    {
      question: "9) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏•‡∏≥‡∏î‡∏±‡∏ö (Ordered List)?",
      choices: ["<ul>", "<ol>", "<li>", "<list>"],
    },
    {
      question: "10) ‡πÅ‡∏ó‡πá‡∏Å‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô HTML?",
      choices: ["<table>", "<tr>", "<td>", "<th>"],
    },
  ];

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col items-center p-8">
      <main className="flex-1 w-full max-w-3xl bg-white p-8 mt-8 border rounded-xl text-black">
        <h2 className="text-center text-xl font-semibold mb-6">‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô-HTML</h2>
        <form onSubmit={handleSubmit} className="space-y-8">
          {questions.map((q, index) => (
            <div key={index}>
              <p className="mb-2">{q.question}</p>
              <div className="space-y-2 pl-4">
                {q.choices.map((choice, i) => (
                  <label key={i} className="block">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      value={choice}
                      checked={answers[index] === choice}
                      onChange={() => handleChange(index, choice)}
                      className="mr-2"
                    />
                    {choice}
                  </label>
                ))}
              </div>
            </div>
          ))}

          <div className="text-center">
            <button
              type="submit"
              className="bg-black text-white px-6 py-2 rounded-full hover:opacity-80 cursor-pointer"
            >
              ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
            </button>
          </div>
        </form>
      </main>
    </div>
  );
}
