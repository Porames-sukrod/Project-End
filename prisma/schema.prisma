generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  studentId String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Quiz {
  id           Int      @id @default(autoincrement())
  questionType String   @db.VarChar(10) // "HTML" or "CSS"
  question     String   @db.Text
  choices      String[] // PostgreSQL array for choices
  correct      String   @db.VarChar(1) // "1", "2", "3", or "4"
  score        String   @db.VarChar(10)
  phase        String   @db.VarChar(10) // "pre" or "post"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("quizzes")
}

model QuizResult {
  id          Int      @id @default(autoincrement())
  studentId   String   // รหัสนักเรียน
  quizType    String   // "HTML" หรือ "CSS"
  phase       String   // "pre" หรือ "post"
  score       Int      // คะแนนที่ได้
  totalScore  Int      // คะแนนเต็ม
  percentage  Float    // คะแนนร้อยละ
  answers     String   // JSON string ของคำตอบทั้งหมด
  completedAt DateTime @default(now())
}
model Course {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  videos      Video[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("courses")
}


// เพิ่มใน schema.prisma
model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  videos Video[]
  
  @@map("categories")
}

model Video {
  id          Int       @id @default(autoincrement())
  title       String
  description String    @db.Text
  youtubeUrl  String
  image       String?
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("videos")
  Course Course[]
}